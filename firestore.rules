# Firestore Security Rules
# These rules should be applied in the Firebase Console under Firestore Database > Rules

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Rule for the 'users' collection
    // A user can read/write ONLY their own document.
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }

    // Rule for the 'trips' collection
    // A user can create a trip.
    // They can only read/update/delete trips where their UID matches the 'userId' field in the document.
    // Anyone can read a trip if its visibility is set to 'public'.
    match /trips/{tripId} {
      allow create: if request.auth != null;
      allow read: if resource.data.visibility == 'public' || (request.auth != null && request.auth.uid == resource.data.userId);
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;

        // Rule for the 'days' subcollection
        // Inherits permissions from the parent trip document.
        match /days/{dayId} {
            allow read, write: if get(/databases/$(database)/documents/trips/$(tripId)).data.userId == request.auth.uid;
        }
    }

    // Rule for the 'places' collection
    // For our app, this data is public and curated by us.
    // All authenticated users can read, but no one can write.
    match /places/{placeId} {
        allow read: if request.auth != null;
        allow write: if false; // Disable client-side writes completely
    }
  }
}